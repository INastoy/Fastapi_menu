version: '3.8'

services:
  fastapi_ylab:
    container_name: fastapi_ylab
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "${PROD_DATABASE_URL}"
      CACHE_URL: "${PROD_CACHE_URL}"
      CELERY_BROKER_URL: "${PROD_CELERY_BROKER_URL}"
      JWT_SECRET: "${JWT_SECRET}"
    entrypoint: sh -c "alembic upgrade head
      && uvicorn main:fastapi_app --host 0.0.0.0 --port 8000"
    volumes:
      - shared-volume:/app/generated_files
    networks:
      - ylab_network
    ports:
      - "8000:8000"
    depends_on:
      postgres_ylab:
        condition: service_healthy
      redis_ylab:
        condition: service_healthy
      celery_worker_ylab:
        condition: service_started


  postgres_ylab:
    container_name: postgres_ylab
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "ylab"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${PGUSER}"
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - ylab_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "ylab"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis_ylab:
    image: redis:latest
    container_name: redis_ylab
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - ylab_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  celery_worker_ylab:
    container_name: celery_worker_ylab
    build:
      context: .
    command: [ 'celery',  '-A', 'main', 'worker', '-l', 'info' ]
    environment:
      DATABASE_URL: "${PROD_DATABASE_URL}"
      CACHE_URL: "${PROD_CACHE_URL}"
      CELERY_BROKER_URL: "${PROD_CELERY_BROKER_URL}"
    volumes:
      - shared-volume:/app/generated_files
    networks:
      - ylab_network
    depends_on:
      rabbitmq_ylab:
        condition: service_healthy

  rabbitmq_ylab:
    image: rabbitmq:latest
    container_name: rabbitmq_ylab
    restart: always
    hostname: rabbitmq_ylab
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    expose:
      - 5672
      - 15692
    ports:
      - "5672:5672"
      - "15692:15692"
    networks:
      - ylab_network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s



networks:
  ylab_network:
    name: ylab_network
volumes:
  postgres_data:
  shared-volume:
